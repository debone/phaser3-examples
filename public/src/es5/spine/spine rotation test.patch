Index: ../public/src/es5/spine/spine rotation test.js
===================================================================
--- ../public/src/es5/spine/spine rotation test.js
+++ ../public/src/es5/spine/spine rotation test.js
@@ -83,33 +83,33 @@
 
     graphics.lineStyle(2, 0x00bb00, 1);
 
     graphics.strokeCircleShape(circle);
-    
+
     graphics.beginPath();
 
-    for (var a = 0; a < 360; a += 22.5)
+    for (let a = 0; a < 360; a += 22.5)
     {
         graphics.moveTo(350, 300);
 
-        var p = Phaser.Geom.Circle.CircumferencePoint(circle, Phaser.Math.DegToRad(a));
+        const p = Phaser.Geom.Circle.CircumferencePoint(circle, Phaser.Math.DegToRad(a));
 
         graphics.lineTo(p.x, p.y);
 
-        var lp = Phaser.Geom.Circle.CircumferencePoint(labelCircle, Phaser.Math.DegToRad(a));
+        const lp = Phaser.Geom.Circle.CircumferencePoint(labelCircle, Phaser.Math.DegToRad(a));
 
-        var na = a;
+        const na = a;
 
         if (a > 180)
         {
             na -= 360;
         }
 
-        var rads = String(Phaser.Math.DegToRad(na)).substr(0, 5);
-        var info = na + "째\n" + rads;
-        var label = this.add.text(lp.x, lp.y, info, labelStyle).setOrigin(0.5);
+        const rads = String(Phaser.Math.DegToRad(na)).substr(0, 5);
+        const info = na + "째\n" + rads;
+        const label = this.add.text(lp.x, lp.y, info, labelStyle).setOrigin(0.5);
     }
-    
+
     graphics.strokePath();
 
     var arrow = this.add.image(350, 300, 'arrow');
 
@@ -119,32 +119,32 @@
 
     graphics2.lineStyle(2, 0x00bb00, 1);
 
     graphics2.strokeCircleShape(circle2);
-    
+
     graphics2.beginPath();
 
-    for (var a = 0; a < 360; a += 22.5)
+    for (let a = 0; a < 360; a += 22.5)
     {
-        var newa = Phaser.Math.RadToDeg(Phaser.Math.Angle.CounterClockwise(Phaser.Math.DegToRad(a)));
+        const newa = Phaser.Math.RadToDeg(Phaser.Math.Angle.CounterClockwise(Phaser.Math.DegToRad(a)));
 
         graphics2.moveTo(350+600, 300);
 
-        var p = Phaser.Geom.Circle.CircumferencePoint(circle2, Phaser.Math.DegToRad(a));
+        const p = Phaser.Geom.Circle.CircumferencePoint(circle2, Phaser.Math.DegToRad(a));
 
         graphics2.lineTo(p.x, p.y);
 
-        var lp = Phaser.Geom.Circle.CircumferencePoint(labelCircle2, Phaser.Math.DegToRad(a));
+        const lp = Phaser.Geom.Circle.CircumferencePoint(labelCircle2, Phaser.Math.DegToRad(a));
 
-        var rads = String(Phaser.Math.DegToRad(newa)).substr(0, 5);
-        var info = String(newa).substr(0, 5) + "째\n" + rads;
-        var label = this.add.text(lp.x, lp.y, info, labelStyle).setOrigin(0.5);
+        const rads = String(Phaser.Math.DegToRad(newa)).substr(0, 5);
+        const info = String(newa).substr(0, 5) + "째\n" + rads;
+        const label = this.add.text(lp.x, lp.y, info, labelStyle).setOrigin(0.5);
     }
-    
+
     graphics2.strokePath();
 
     var spineBoy = this.add.spine(350+600, 300, 'boy', 'walk', true);
-    
+
     spineBoy.setScale(0.3, 0.3);
     // spineBoy.setScale(-0.3, 0.3);
 
     var text = this.add.text(10, 10, '', { font: '16px Courier', fill: '#00ff00' });
